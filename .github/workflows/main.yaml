name: Main

## This Github Action workflow is triggered, if code is pushed to the main branch or a Pull Request
## (PR) is opened / edited from the dev branch.
## In real world scenario, pushing directly to the main branch should be blocked.
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ dev ]
    types: [ opened, edited ]

  ## Adding this allows us to trigger this workflow manually (Just for debugging purposes).
  workflow_dispatch: { }

jobs:

  scan_sourcecode:
    name: Scanning sourcecode to find vulberabilities, misconfigurations and exposed secrets
    runs-on: ubuntu-latest
    permissions:
      contents: write
      security-events: write
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create outputs directory
        run: mkdir -p ./outputs/trivy

      - name: Run Trivy vulnerability and secret scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: .
          trivy-config: trivy.yaml
          format: sarif
          output: ./outputs/trivy/fs.scan-result.sarif

      - name: Upload the scan result as Github artifact
        uses: actions/upload-artifact@v3
        with:
          name: trivy.fs.scan-result.sarif
          path: ./outputs/trivy/fs.scan-result.sarif

      - name: Detect IaC vulnerabilities and misconfigurations using Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: config
          scan-ref: .
          trivy-config: trivy.yaml
          format: sarif
          output: ./outputs/trivy/config.scan-result.sarif

      - name: Upload the scan result as Github artifact
        uses: actions/upload-artifact@v3
        with:
          name: trivy.config.scan-result.sarif
          path: ./outputs/trivy/config.scan-result.sarif

      ## The Trivy scan results will be uploaded to Github CodeQL only when code is being pushed to
      ## the main branch.
      - name: Upload the scan results to Github CodeQL
        if: github.ref == 'refs/heads/main'
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: ./outputs/trivy

  build_push_sign_and_scan_container_images:
    name: Build, push, sign and scan container images
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: write

    strategy:
      matrix:
        microservice:

          - name: authentication-microservice
            path: backend/microservices/authentication
            manifest: kubernetes/base/microservices/authentication-microservice.application.yaml

          - name: profile-microservice
            path: backend/microservices/profile
            manifest: kubernetes/base/microservices/profile-microservice.application.yaml

    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      ## If sourcecode of the microservice has changed, only then we will rebuild, push, sign
      ## and scan the container image.
      - name: Detect sourcecode change
        uses: dorny/paths-filter@v2
        id: path-filter
        with:
          filters: |
            sourcecode:
              - '${{ matrix.microservice.path }}/**'

      - name: Cancel job if sourcecode didn't change
        if: steps.path-filter.outputs.sourcecode == 'true'
        run: exit 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: archisman-mridha
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore Caches Cargo dependencies (if exists)
        uses: actions/cache/restore@v3
        with:
          path: |
            /usr/local/cargo/registry/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      ## It takes pretty long to build container images for the ARM64 platform (even when using QEMU),
      ## so skipping that one.
      - name: Build and push AMD64 container image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ${{ matrix.microservice.path }}/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/archisman-mridha/whatsapp-clone-${{ matrix.microservice.name }}:${{ github.sha }}
          ## Experimental cache exporter for GitHub Actions provided by buildx and BuildKit.
          ## It uses the GitHub Cache API to fetch and load the Docker layer cache blobs across
          ## builds.
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Cache Cargo dependencies
        uses: actions/cache@v3
        with:
          path: |
            /usr/local/cargo/registry/
            target/
          key: ${{ runner.os }}-cargo-${{ matrix.microservice.name }}-${{ hashFiles('**/Cargo.lock') }}

      ## Cosign is a command line utility that can sign and verify software artifact, such as
      ## container images and blobs.
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.1.1
        with:
          cosign-release: v2.2.1

      - name: Sign the published container image
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          echo "${{ secrets.COSIGN_PRIVATE_KEY }}" > cosign.key
          cosign sign --key cosign.key \
            -a "repo=whatsapp-clone" \
            -a "owner=Archisman-Mridha" \
            ghcr.io/archisman-mridha/whatsapp-clone-${{ matrix.microservice.name }}:${{ github.sha }} -y

      - name: Scan container image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/archisman-mridha/whatsapp-clone-${{ matrix.microservice.name }}:${{ github.sha }}
          ignore-unfixed: true
          vuln-type: os,library
          trivy-config: trivy.yaml
          output: ./outputs/trivy/${{ matrix.microservice.name }}.container-image.scan-result.sarif

      - name: Upload the scan result as Github artifact
        uses: actions/upload-artifact@v3
        with:
          name: trivy.${{ matrix.microservice.name }}-microservice.container-image.scan-result.sarif
          path: ./outputs/trivy/${{ matrix.microservice.name }}.container-image.scan-result.sarif

      - name: Update container image tag in Kubernetes manifests
        run: |
          find kubernetes/base/microservices -type f -name "*.application.yaml" | while read -r file; do
            sed -i 's/whatsapp-clone-\(.*\):[[:alnum:]]\+/whatsapp-clone-\1:${{ github.sha }}/g' $file
          done

          git config --global user.name "Archisman-Mridha" && \
            git config --global user.email "archismanmridha12345@gmail.com"

          git add . && \
            git commit -m "ðŸ¤– Update container image tag for ${{ matrix.microservice.name }} to ${{ github.sha }}" && \
            git push --set-upstream origin main